PROG -> isMainDeClasse { isClasse }

isMainDeClasse -> class id '{' public static void main ( String [ ] id )'{' CMD '}' '}'

isClasse -> class id [ extends id ]'{' { VAR } { isDeclaracaoMetodo }'}'
VAR -> TIPO id ;

isDeclaracaoMetodo -> public TIPO id '(' [ isParametro ]')' '{' { VAR } { CMD } return EXP ; '}'

isParametro -> TIPO id { , TIPO id }

TIPO -> int '[' ']'
| boolean
| int
| id

    (*CMD Contem ambiguidade*)
    (*Exemplo: if (exp) if (exp) cmd else cmd*)
CMD -> '{' { CMD }'}'
| if '(' EXP ')' CMD
| if '(' EXP ')' CMD else CMD
| while '(' EXP ')' CMD
| System.out.println '(' EXP ')' ;
| id = EXP ;
| id '[' EXP ']' = EXP ;

EXP -> EXP && isSubtracao
| isSubtracao

isSubtracao -> isSubtracao < isAdicao
| isSubtracao == isAdicao
| isSubtracao != isAdicao
| isAdicao

isAdicao -> isAdicao + isMultiplicacao
| isAdicao - isMultiplicacao
| isMultiplicacao

isMultiplicacao -> isMultiplicacao * isAtribuicao
| isMultiplicacao / isAtribuicao
| isAtribuicao

isAtribuicao -> ! isAtribuicao
| - isAtribuicao
| true
| false
| num
| null
| new int '[' EXP ']'
| isInstanciaDeClasse . length
| isInstanciaDeClasse '[' EXP ']'
| isInstanciaDeClasse

isInstanciaDeClasse -> id
| this
| new id '(' ')'
| '(' EXP ')'
| isInstanciaDeClasse . id
| isInstanciaDeClasse . id '(' [ EXPS ]')'

EXPS -> EXP { , EXP }